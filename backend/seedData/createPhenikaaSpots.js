const db = require('./config/database');

async function createPhenikaaSpots() {
  try {
    console.log('üöÄ T·∫°o ch·ªó ƒë·ªó xe cho b√£i Phenikaa...\n');

    // 1. T√¨m b√£i ƒë·ªó xe Phenikaa
    console.log('1. T√¨m b√£i ƒë·ªó xe Phenikaa...');
    const [phenikaaLots] = await db.execute(
      'SELECT lot_id, name, total_spots FROM parking_lots WHERE name LIKE ?',
      ['%Phenikaa%']
    );

    if (phenikaaLots.length === 0) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y b√£i ƒë·ªó xe Phenikaa');
      return;
    }

    const phenikaaLot = phenikaaLots[0];
    console.log(`‚úÖ T√¨m th·∫•y b√£i: ${phenikaaLot.name} (ID: ${phenikaaLot.lot_id})`);

    // 2. Ki·ªÉm tra s·ªë ch·ªó ƒë·ªó xe hi·ªán c√≥
    const [existingSpots] = await db.execute(
      'SELECT COUNT(*) as count FROM parking_spots WHERE lot_id = ?',
      [phenikaaLot.lot_id]
    );

    console.log(`üìä Hi·ªán c√≥: ${existingSpots[0].count} ch·ªó ƒë·ªó xe`);
    console.log(`üìä T·ªïng c·∫ßn: ${phenikaaLot.total_spots} ch·ªó ƒë·ªó xe`);

    // 3. T·∫°o th√™m ch·ªó ƒë·ªó xe n·∫øu c·∫ßn
    const spotsToCreate = phenikaaLot.total_spots - existingSpots[0].count;
    
    if (spotsToCreate > 0) {
      console.log(`\n2. T·∫°o th√™m ${spotsToCreate} ch·ªó ƒë·ªó xe...`);
      
      for (let i = existingSpots[0].count + 1; i <= phenikaaLot.total_spots; i++) {
        const spotType = i <= 5 ? 'vip' : (i <= 10 ? 'ev' : 'standard');
        const spotNumber = `P${i.toString().padStart(3, '0')}`;
        
        await db.execute(
          'INSERT INTO parking_spots (lot_id, spot_number, spot_type, is_occupied, is_reserved) VALUES (?, ?, ?, ?, ?)',
          [phenikaaLot.lot_id, spotNumber, spotType, false, false]
        );
      }
      
      console.log(`‚úÖ ƒê√£ t·∫°o ${spotsToCreate} ch·ªó ƒë·ªó xe m·ªõi`);
    } else {
      console.log('‚úÖ ƒê√£ c√≥ ƒë·ªß ch·ªó ƒë·ªó xe');
    }

    // 4. Ki·ªÉm tra l·∫°i
    const [finalSpots] = await db.execute(
      'SELECT COUNT(*) as count FROM parking_spots WHERE lot_id = ?',
      [phenikaaLot.lot_id]
    );

    console.log(`\nüìä T·ªïng ch·ªó ƒë·ªó xe sau khi t·∫°o: ${finalSpots[0].count}`);

    // 5. Hi·ªÉn th·ªã danh s√°ch ch·ªó ƒë·ªó xe
    const [spots] = await db.execute(
      'SELECT spot_id, spot_number, spot_type FROM parking_spots WHERE lot_id = ? ORDER BY spot_id',
      [phenikaaLot.lot_id]
    );

    console.log('\nüìã Danh s√°ch ch·ªó ƒë·ªó xe:');
    spots.forEach((spot, index) => {
      console.log(`${index + 1}. ${spot.spot_number} (${spot.spot_type}) - ID: ${spot.spot_id}`);
    });

  } catch (error) {
    console.error('‚ùå L·ªói:', error);
  } finally {
    process.exit(0);
  }
}

createPhenikaaSpots();
